{"version":3,"sources":["images/logo.jpg","images/excel-422.jpg","images/white-oak-distribution-2080_orig.jpg","images/merrell-final-map_orig.jpg","Header.jsx","Navigation.jsx","Projects.jsx","Maps.jsx","Technologies.jsx","ResumeModal.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","src","logo","alt","Component","Navigation","Navbar","sticky","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Projects","Container","id","Row","Col","style","color","CardDeck","Card","Body","Title","Text","target","Footer","Maps","Carousel","Item","weatherMap","Caption","whiteOak","illustratorMap","Technologies","paddingTop","Button","onClick","handleShow","marginTop","ResumeModal","Modal","show","showModal","onHide","handleClose","dialogClassName","closeButton","App","setState","showSidebar","src_Navigation","src_Header","src_Projects","src_Maps","src_Technologies","class","src_ResumeModal","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.447753db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.087f3e1b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/excel-422.dc52441e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/white-oak-distribution-2080_orig.89bf9e6a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/merrell-final-map_orig.db39f117.jpg\";","import React, { Component } from 'react';\nimport {Container, Col, Row} from 'react-bootstrap'\nimport logo from './images/logo.jpg'\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return (\n            <div>\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n                <div className=\"info\">\n                    <h1>Elijah Merrell</h1>\n                    <h3>Web Developer</h3>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Header;","import React, { Component } from 'react';\nimport {Nav, Navbar, NavDropdown} from 'react-bootstrap'\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return ( \n            <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">Elijah Merrell</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                {/* <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#projects\">Technical Projects</Nav.Link>\n                    <Nav.Link href=\"#gis\">GIS</Nav.Link>\n                    <Nav.Link href=\"#skills\">Skills</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse> */}\n            </Navbar>\n         );\n    }\n}\n \nexport default Navigation;","import React, { Component } from 'react';\nimport { Container, Row, Col, CardDeck, Card } from 'react-bootstrap';\n\nclass Projects extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return ( \n            <Container id=\"projects\" className='project-container'>\n                <Row className='asymmetric-projects'>\n                    <Col>\n                        <h1 style={{color: 'white'}}>Technical Projects</h1>\n                        <CardDeck className=\"card-deck\">\n                            <Card className= 'hvr-grow'>\n\n                                <Card.Body>\n                                <Card.Title>WhaleTracker</Card.Title>\n                                <Card.Text>\n                                    A React Native mobile app that allows users to report whale sightings using real-time geolocation and AWS photo uploads. \n                                </Card.Text>\n                                <a href=\"https://github.com/elimerrell/WhaleTracker-Backend\" target=\"_blank\">Repository</a>\n                                <br></br>\n                                <a href=\"http://gnarrrnia.herokuapp.com\" target=\"_blank\">Demo</a>\n                                </Card.Body>\n                                <Card.Footer>\n                                <i className=\"devicon-react-original-wordmark colored\"></i>\n                                <i className=\"devicon-ruby-plain colored\"></i>\n                                <i className=\"devicon-amazonwebservices-original\"></i>\n                                </Card.Footer>\n                            </Card>\n                            <Card className= 'hvr-grow'>\n                                <Card.Body>\n                                <Card.Title>Gnarnia</Card.Title>\n                                <Card.Text>\n                                    A single page application that allows users to get real-time weather for ski resorts around the Western US.\n                                </Card.Text>\n                                <a href=\"https://github.com/MatthewBrophy/mod-3-project-frontend\" target=\"_blank\">Repository</a>\n                                <br></br>\n                                <a href=\"http://gnarrrnia.herokuapp.com\" target=\"_blank\">Demo</a>\n                                </Card.Body>\n                                <Card.Footer>\n                                <i className=\"devicon-ruby-plain colored\"></i>\n                                <i className=\"devicon-javascript-plain colored\"></i>\n                                <i className=\"devicon-heroku-line-wordmark colored\"></i>\n                                </Card.Footer>\n                            </Card>\n                            <Card className= 'hvr-grow'>\n                                <Card.Body>\n                                <Card.Title>Campy</Card.Title>\n                                <Card.Text>\n                                    Campy is an outdoor recreation community where users can search and review outdoor recreation parks and facilities as well as interacting with other members of the Campy community.\n                                </Card.Text>\n                                <a href=\"https://github.com/elimerrell/Campy\" target=\"_blank\">Repository</a>\n                                <br></br>\n                                <a href=\"http://campy.herokuapp.com\" target=\"_blank\">Demo</a>\n                                </Card.Body>\n                                <Card.Footer>\n                                <i className=\"devicon-ruby-plain colored\"></i>\n                                </Card.Footer>\n                            </Card>\n                        </CardDeck>\n                    </Col>\n                </Row>\n            </Container>\n         );\n    }\n}\n \nexport default Projects;","import React, { Component } from 'react';\nimport { Container, Row, Col, Carousel} from 'react-bootstrap';\nimport weatherMap from './images/excel-422.jpg'\nimport whiteOak from './images/white-oak-distribution-2080_orig.jpg'\nimport illustratorMap from './images/merrell-final-map_orig.jpg'\n\nclass Maps extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return ( \n            <Container className='project-container'>\n                <Row className='asymmetric-maps'>\n                    <Col>\n                        <h1 style={{color: 'white'}}>Geographic Information Systems</h1>\n                        <Carousel>\n                            <Carousel.Item className=\"carousel-item\">\n                                <img\n                                className=\"d-block w-100\"\n                                src={weatherMap}\n                                />\n                                <Carousel.Caption>\n                                <h3>First slide label</h3>\n                                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n                                </Carousel.Caption>\n                            </Carousel.Item>\n                            <Carousel.Item className=\"carousel-item\">\n                                <img\n                                className=\"d-block w-100\"\n                                src={whiteOak}\n                                />\n                                <Carousel.Caption>\n                                <h3>Second slide label</h3>\n                                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                                </Carousel.Caption>\n                            </Carousel.Item>\n                            <Carousel.Item className=\"carousel-item\">\n                                <img\n                                className=\"d-block w-100\"\n                                src={illustratorMap}\n                                />\n                                <Carousel.Caption>\n                                <h3>Third slide label</h3>\n                                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n                                </Carousel.Caption>\n                            </Carousel.Item>\n                        </Carousel>\n                    </Col>\n                </Row>\n            </Container>\n         );\n    }\n}\n \nexport default Maps;","import React, { Component } from 'react';\nimport {Container, Row, Col, Button} from 'react-bootstrap'\n\nclass Technologies extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return ( \n            <Container className='project-container'>\n                <Row className='asymmetric-projects'>\n                    <Col>\n                    <div style={{paddingTop: '3vh', color: 'white'}}>\n                    <h1>Tech I Use</h1>\n                        <i className=\"devicon-ruby-plain-wordmark hvr-grow\"></i>\n                        <i className=\"devicon-rails-plain-wordmark hvr-grow\"></i>\n                        <i className=\"devicon-javascript-plain hvr-grow\" ></i>\n                        <i className=\"devicon-postgresql-plain-wordmark hvr-grow\"></i>\n                        <i className=\"devicon-react-original-wordmark hvr-grow\"></i>\n                        <i className=\"devicon-nodejs-plain-wordmark hvr-grow\"></i>\n                    </div>\n                    <Button onClick={this.props.handleShow} style={{marginTop: '5vh'}}>Resume</Button>\n                    </Col>\n                </Row>\n            </Container>\n         );\n    }\n}   \n \nexport default Technologies;","import React from 'react';\nimport {Button, Modal} from 'react-bootstrap'\n\nconst ResumeModal = (props) => {\n    return(\n  <Modal show={props.showModal} onHide={props.handleClose} dialogClassName=\"resume-modal\">\n    <Modal.Header closeButton>\n    <Modal.Title>Resume</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n        hl;ksaf;lkajsdf;lkj\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={props.handleClose}>\n        Close\n      </Button>\n    </Modal.Footer>\n  </Modal>  \n    )\n}\n\nexport default ResumeModal; \n ","import React, {Component} from 'react';\nimport {Button, Modal} from 'react-bootstrap'\nimport Header from './Header.jsx'\nimport './App.css';\nimport Navigation from './Navigation.jsx'\nimport Projects from './Projects.jsx';\nimport Maps from './Maps.jsx'\nimport Technologies from './Technologies.jsx'\nimport ResumeModal from './ResumeModal.jsx'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      showSidebar: false, \n      showModal: false\n     }\n  }\n\n  handleClose = () => {\n    this.setState({ showModal: false });\n  }\n\n  handleShow = () => {\n    this.setState({ showModal: true });\n  }\n\n  render() { \n    return ( \n      <div className=\"App\">\n        <Navigation/>\n        <Header/>\n        <Projects/>\n        <Maps/>\n        <Technologies handleShow={this.handleShow}/>\n        <div class=\"icon-bar\">\n          <a href=\"https://github.com/elimerrell\" target=\"_blank\" class=\"github\"><i class=\"fa fa-github\"></i></a>\n          <a href=\"https://www.linkedin.com/in/eli-merrell-1444a5135/\" class=\"linkedin\" target=\"_blank\"><i class=\"fa fa-linkedin\"></i></a>\n          <a href=\"https://twitter.com/merrell_eli\" class=\"twitter\" target=\"_blank\"><i class=\"fa fa-twitter\"></i></a>\n          <a href=\"https://www.youtube.com/channel/UCbpjYLwvygNVirSG02A-RKQ?view_as=subscriber\" class=\"youtube\" target=\"_blank\"><i class=\"fa fa-youtube\"></i></a>\n        </div>\n        <ResumeModal showModal={this.state.showModal} handleClose={this.handleClose} handleShow={this.handleShow}/>\n      </div> \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}